name: CI/CD Pipeline with DockerHub
 
on:
  pull_request:
    branches:
      - main
 
jobs:
  build:
    name: Build and Test Spring Boot App and React
    runs-on: ubuntu-latest
 
    steps:
      # Étape 1: Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3
 
      # Étape 2: Configuration de Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to mvnw
        run: chmod +x ./backend/BattlescrollService/mvnw
 
      # Étape 3: Installation des dépendances backend
      - name: Install dependencies
        working-directory: ./backend/BattlescrollService
        run: ./mvnw dependency:resolve
 
      # Étape 4: Compilation du projet
      - name: Build the project
        working-directory: ./backend/BattlescrollService
        run: ./mvnw clean install
 
      # Étape 5: Exécution des tests unitaires
      - name: Run tests
        working-directory: ./backend/BattlescrollService
        run: ./mvnw test
 
  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
 
    steps:
      # Étape 1: Vérification du code source
      - name: Checkout code
        uses: actions/checkout@v3
 
      # Étape 2: Connexion à DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      # Étape 3: Construction de l'image Docker back
      - name: Build Docker Image Back
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:${{ github.sha }} ./backend/BattlescrollService
          
      # Étape 4: Push de l'image vers DockerHub
      - name: Push Docker Image Back
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:${{ github.sha }}
 
  # deploy:
  #   name: Deploy Application and Test Environment
  #   needs: docker
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Étape 1: Vérification du code source
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Étape 2: Installer Docker et Docker Compose
  #     - name: Set up Docker
  #       uses: docker/setup-buildx-action@v2

  #     - name: Install Docker Compose
  #       run: |
  #         sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  #         sudo chmod +x /usr/local/bin/docker-compose
  #         docker-compose --version  

  #     # Étape 3: Lancer Docker Compose
  #     - name: Start Docker Compose
  #       env:
  #         DOCKER_USERNAME_HUB: ${{ secrets.DOCKER_USERNAME }}
  #         GITHUB_SHA: ${{ github.sha }}
  #       run: |
  #         docker-compose -f docker-compose-hub.yml up -d --build

  #     # Étape 4: Tests d'intégration
  #     - name: Test Backend Health
  #       run: |
  #         for i in {1..10}; do
  #           curl --fail http://localhost:8080/api/factions && break || sleep 5;
  #         done || exit 1

  #     # Étape 5: Arrêt des services Docker Compose
  #     - name: Stop Docker Compose
  #       if: always()
  #       run: |
  #         docker-compose -f docker-compose-hub.yml down   

  latest:
    name: Build and Push Docker Image with tag latest
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull previously pushed images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:${{ github.sha }}

      - name: Tag images with latest
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:latest

      - name: Push latest images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/battlescroll_service:latest
 